apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-service-deployment
  namespace: ecommerce
  labels:
    app: orders-service
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: orders-service
  template:
    metadata:
      labels:
        app: orders-service
        version: v1
    spec:
      containers:
        - name: orders-service
          image: asia-southeast1-docker.pkg.dev/ecommerce-micro-0037/my-ecommerce-repo/orders-service:v1
          ports:
            - containerPort: 8083
              name: http
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "8083"
            - name: PRODUCTS_SERVICE_URL
              value: "http://products-service:80"
            - name: USERS_SERVICE_URL
              value: "http://users-service:80"
            - name: SERVICE_NAME
              value: "orders-service"
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8083
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8083
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: orders-service
  namespace: ecommerce
  labels:
    app: orders-service
spec:
  type: ClusterIP # Internal only - không expose ra ngoài
  selector:
    app: orders-service
  ports:
    - port: 80
      targetPort: 8083
      protocol: TCP
      name: http
